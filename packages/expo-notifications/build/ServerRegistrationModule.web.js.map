{"version":3,"file":"ServerRegistrationModule.web.js","sourceRoot":"","sources":["../src/ServerRegistrationModule.web.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,SAAS,CAAC;AAI7B,MAAM,mBAAmB,GAAG,oCAAoC,CAAC;AACjE,MAAM,0BAA0B,GAAG,2CAA2C,CAAC;AAE/E,uDAAuD;AACvD,IAAI,yBAAyB,GAAG,GAAG,EAAE;IACnC,MAAM,qBAAqB,GAAG,MAAM,EAAE,CAAC;IACvC,yBAAyB,GAAG,GAAG,EAAE,CAAC,qBAAqB,CAAC;AAC1D,CAAC,CAAC;AAEF,eAAe;IACb,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACjC,IAAI,cAAc,CAAC;QAEnB,IAAI;YACF,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YAC3D,IAAI,CAAC,cAAc,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;gBACzD,cAAc,GAAG,MAAM,EAAE,CAAC;gBAC1B,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,cAAc,CAAC,CAAC;aAC3D;SACF;QAAC,OAAO,KAAK,EAAE;YACd,cAAc,GAAG,yBAAyB,EAAE,CAAC;SAC9C;QAED,OAAO,cAAc,CAAC;IACxB,CAAC;IACD,4BAA4B,EAAE,KAAK,IAAI,EAAE;QACvC,OAAO,YAAY,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;IAC1D,CAAC;IACD,4BAA4B,EAAE,KAAK,EAAE,oBAAmC,EAAE,EAAE;QAC1E,IAAI,oBAAoB,EAAE;YACxB,YAAY,CAAC,OAAO,CAAC,0BAA0B,EAAE,oBAAoB,CAAC,CAAC;SACxE;aAAM;YACL,YAAY,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC;SACrD;IACH,CAAC;IACD,uBAAuB;IACvB,WAAW,EAAE,GAAG,EAAE,GAAE,CAAC;IACrB,eAAe,EAAE,GAAG,EAAE,GAAE,CAAC;CACE,CAAC","sourcesContent":["import uuidv4 from 'uuid/v4';\n\nimport { ServerRegistrationModule } from './ServerRegistrationModule.types';\n\nconst INSTALLATION_ID_KEY = 'EXPO_NOTIFICATIONS_INSTALLATION_ID';\nconst LAST_REGISTRATION_INFO_KEY = 'EXPO_NOTIFICATIONS_LAST_REGISTRATION_INFO';\n\n// Lazy fallback installationId per session initializer\nlet getFallbackInstallationId = () => {\n  const sessionInstallationId = uuidv4();\n  getFallbackInstallationId = () => sessionInstallationId;\n};\n\nexport default {\n  getInstallationIdAsync: async () => {\n    let installationId;\n\n    try {\n      installationId = localStorage.getItem(INSTALLATION_ID_KEY);\n      if (!installationId || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(INSTALLATION_ID_KEY, installationId);\n      }\n    } catch (error) {\n      installationId = getFallbackInstallationId();\n    }\n\n    return installationId;\n  },\n  getLastRegistrationInfoAsync: async () => {\n    return localStorage.getItem(LAST_REGISTRATION_INFO_KEY);\n  },\n  setLastRegistrationInfoAsync: async (lastRegistrationInfo: string | null) => {\n    if (lastRegistrationInfo) {\n      localStorage.setItem(LAST_REGISTRATION_INFO_KEY, lastRegistrationInfo);\n    } else {\n      localStorage.removeItem(LAST_REGISTRATION_INFO_KEY);\n    }\n  },\n  // mock implementations\n  addListener: () => {},\n  removeListeners: () => {},\n} as ServerRegistrationModule;\n"]}